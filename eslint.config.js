import js from '@eslint/js';

export default [
    js.configs.recommended,
    {
        files: ['**/*.js'],
        languageOptions: {
            ecmaVersion: 2024,
            sourceType: 'module',
            globals: {
                window: 'readonly',
                document: 'readonly',
                console: 'readonly',
                localStorage: 'readonly',
                sessionStorage: 'readonly',
                navigator: 'readonly',
                performance: 'readonly',
                requestAnimationFrame: 'readonly',
                cancelAnimationFrame: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly',
                fetch: 'readonly',
                URL: 'readonly',
                URLSearchParams: 'readonly',
                Blob: 'readonly',
                FormData: 'readonly',
                AudioContext: 'readonly',
                webkitAudioContext: 'readonly',
                IntersectionObserver: 'readonly',
                PerformanceObserver: 'readonly',
                MutationObserver: 'readonly',
                ResizeObserver: 'readonly',
                getEventListeners: 'readonly',
                debugger: 'readonly',
                // Browser globals for compatibility and images modules
                Image: 'readonly',
                HTMLImageElement: 'readonly',
                HTMLScriptElement: 'readonly',
                Element: 'readonly',
                Node: 'readonly',
                CSS: 'readonly',
                getComputedStyle: 'readonly',
                requestIdleCallback: 'readonly',
            },
        },
        rules: {
            // Possible Errors
            'no-console': ['warn', { allow: ['warn', 'error', 'info'] }],
            'no-debugger': 'error',
            'no-dupe-args': 'error',
            'no-dupe-keys': 'error',
            'no-duplicate-case': 'error',
            'no-empty': ['error', { allowEmptyCatch: true }],
            'no-ex-assign': 'error',
            'no-extra-boolean-cast': 'error',
            'no-func-assign': 'error',
            'no-inner-declarations': 'error',
            'no-invalid-regexp': 'error',
            'no-irregular-whitespace': 'error',
            'no-sparse-arrays': 'error',
            'no-template-curly-in-string': 'error',
            'no-unexpected-multiline': 'error',
            'no-unreachable': 'error',
            'no-unsafe-finally': 'error',
            'no-unsafe-negation': 'error',
            'use-isnan': 'error',
            'valid-typeof': 'error',

            // Best Practices
            'array-callback-return': 'error',
            'block-scoped-var': 'error',
            'consistent-return': 'error',
            curly: ['error', 'all'],
            'default-case': 'error',
            'default-param-last': 'error',
            'dot-notation': 'error',
            eqeqeq: ['error', 'always'],
            'guard-for-in': 'error',
            'max-classes-per-file': ['error', 2], // Allow ObservabilityManager and InstrumentedPromise
            'no-alert': 'warn',
            'no-caller': 'error',
            'no-div-regex': 'error',
            'no-else-return': 'error',
            'no-empty-function': ['error', { allow: ['constructors'] }],
            'no-empty-pattern': 'error',
            'no-eval': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-extra-label': 'error',
            'no-floating-decimal': 'error',
            'no-implicit-coercion': 'error',
            'no-implied-eval': 'error',
            'no-invalid-this': 'off', // We use this in callbacks properly
            'no-iterator': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-loop-func': 'error',
            'no-multi-spaces': 'error',
            'no-multi-str': 'error',
            'no-new': 'error',
            'no-new-func': 'error',
            'no-new-wrappers': 'error',
            'no-octal': 'error',
            'no-octal-escape': 'error',
            'no-param-reassign': 'error',
            'no-proto': 'error',
            'no-redeclare': 'error',
            'no-return-assign': 'error',
            'no-return-await': 'error',
            'no-script-url': 'error',
            'no-self-assign': 'error',
            'no-self-compare': 'error',
            'no-sequences': 'error',
            'no-throw-literal': 'error',
            'no-unmodified-loop-condition': 'error',
            'no-unused-expressions': 'error',
            'no-unused-labels': 'error',
            'no-useless-call': 'error',
            'no-useless-catch': 'error',
            'no-useless-concat': 'error',
            'no-useless-escape': 'error',
            'no-useless-return': 'error',
            'no-void': 'error',
            'no-with': 'error',
            'prefer-promise-reject-errors': 'error',
            radix: 'error',
            'require-await': 'error',
            'vars-on-top': 'error',
            'wrap-iife': ['error', 'outside'],
            yoda: 'error',

            // Variables
            'init-declarations': ['error', 'always'],
            'no-delete-var': 'error',
            'no-shadow': 'error',
            'no-shadow-restricted-names': 'error',
            'no-undef': 'error',
            'no-undef-init': 'error',
            'no-undefined': 'off',
            'no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
            'no-use-before-define': 'error',

            // Stylistic Issues
            camelcase: ['error', { properties: 'never' }],
            'consistent-this': ['error', 'self'],
            'func-name-matching': 'error',
            'func-names': 'off', // Anonymous functions are fine
            'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
            'lines-between-class-members': ['error', 'always'],
            'max-depth': ['error', 4],
            'max-lines': ['error', { max: 1000, skipBlankLines: true, skipComments: true }], // Large modules like observability
            'max-lines-per-function': [
                'error',
                { max: 100, skipBlankLines: true, skipComments: true },
            ],
            'max-nested-callbacks': ['error', 3],
            'max-params': ['error', 5],
            'max-statements': ['error', 30], // Complex functions need more statements
            'max-statements-per-line': ['error', { max: 1 }],
            'new-cap': 'error',
            'no-array-constructor': 'error',
            'no-bitwise': 'warn',
            'no-continue': 'warn',
            'no-lonely-if': 'error',
            'no-mixed-operators': 'error',
            'no-multi-assign': 'error',
            'no-nested-ternary': 'error',
            'no-new-object': 'error',
            'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
            'no-underscore-dangle': 'off',
            'no-unneeded-ternary': 'error',
            'one-var': ['error', 'never'],
            'operator-assignment': ['error', 'always'],
            'prefer-object-spread': 'error',
            'spaced-comment': ['error', 'always'],

            // ECMAScript 6
            'arrow-body-style': ['error', 'as-needed'],
            'arrow-parens': ['error', 'as-needed'],
            'arrow-spacing': 'error',
            'constructor-super': 'error',
            'generator-star-spacing': 'error',
            'no-class-assign': 'error',
            'no-confusing-arrow': 'error',
            'no-const-assign': 'error',
            'no-dupe-class-members': 'error',
            'no-duplicate-imports': 'error',
            'no-new-symbol': 'error',
            'no-this-before-super': 'error',
            'no-useless-computed-key': 'error',
            'no-useless-constructor': 'error',
            'no-useless-rename': 'error',
            'no-var': 'error',
            'object-shorthand': 'error',
            'prefer-arrow-callback': 'error',
            'prefer-const': 'error',
            'prefer-destructuring': ['error', { array: true, object: true }],
            'prefer-numeric-literals': 'error',
            'prefer-rest-params': 'error',
            'prefer-spread': 'error',
            'prefer-template': 'error',
            'require-yield': 'error',
            'rest-spread-spacing': 'error',
            'sort-imports': ['error', { ignoreCase: true, ignoreDeclarationSort: true }],
            'symbol-description': 'error',
            'template-curly-spacing': 'error',
            'yield-star-spacing': 'error',
        },
    },
];
